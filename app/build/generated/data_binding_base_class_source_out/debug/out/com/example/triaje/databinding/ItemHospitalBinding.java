// Generated by view binder compiler. Do not edit!
package com.example.triaje.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.triaje.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHospitalBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button button1;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final ImageView ivHospital;

  @NonNull
  public final TextView textViewHospital;

  private ItemHospitalBinding(@NonNull CardView rootView, @NonNull Button button1,
      @NonNull Button button2, @NonNull Button button3, @NonNull ImageView ivHospital,
      @NonNull TextView textViewHospital) {
    this.rootView = rootView;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.ivHospital = ivHospital;
    this.textViewHospital = textViewHospital;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHospitalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHospitalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_hospital, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHospitalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button1;
      Button button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.ivHospital;
      ImageView ivHospital = ViewBindings.findChildViewById(rootView, id);
      if (ivHospital == null) {
        break missingId;
      }

      id = R.id.textViewHospital;
      TextView textViewHospital = ViewBindings.findChildViewById(rootView, id);
      if (textViewHospital == null) {
        break missingId;
      }

      return new ItemHospitalBinding((CardView) rootView, button1, button2, button3, ivHospital,
          textViewHospital);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
